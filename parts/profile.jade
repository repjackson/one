template(name='profile')
    with current_user
        .ui.stackable.padded.grid
            .row
                //- img.ui.image.checkin_banner(src="{{c.url banner_image width=1000 height=1000 crop='crop'}}")
                .four.wide.column.scrolling
                    a.ui.fluid.large.basic.circular.button.fly_left(href='/users')
                        i.chevron.left.icon
                        +i name='groups'
                        // |users
                    a.item(href="/user/#{current_user.username}")
                        img.ui.circular.centered.image(src="{{c.url image_id height=400 width=400 gravity='face' crop='fill'}}")
                    // .spacer
                    // a(href="/user/#{username}")
                    .ui.center.aligned.header
                        // strong #{name}
                        // strong #{user.first_name} #{user.last_name}
                        | @#{user.username}        
                    .ui.two.column.middle.aligned.grid
                        // .column
                        //     img.ui.small.inline.image.mobile.only(src="{{c.url image_id height=300 width=300 gravity='face' crop='fill'}}")
                        .column
                            .ui.inline.header
                                strong #{user.name}
                                //- small @#{user.username}        
                            a.ui.inline.header(href="/user/#{current_user.username}/credit" title='credit')
                                +i name='coins'
                                |#{user.points}p
                    if is_current_user
                        a.ui.circular.button(href="/user/#{current_user.username}/edit" title='profile settings')
                            i.cog.icon
                            |edit profile
                    else if is_admin
                        a.ui.circular.button(href="/user/#{current_user.username}/edit" title='profile settings')
                            +i name='settings' cl='ui avatar image'
                            |edit profile
                    // unless is_current_user
                    //     +friend_button
                    if is_current_user
                        .ui.button.logout
                            i.sign.out.alternate.icon
                            |log out
                    if admin
                        .ui.header
                            i.shield.icon
                            |admin
                    +array_view key='roles' label='roles' direct=true icon='shield'
                    +array_view key='tags' label='tags' direct=true icon='tags'
                    a.ui.button.logout_other_clients(href="#" title='logout other clients')
                        i.globe.icon
                        |log out other clients
                    if link 
                        a.ui.button(href=link target='_window')
                            |app link
                    if is_current_user
                        +boolean_edit key='online' label='online' direct=true
                        +text_edit key='current_status' label='status' icon='clock' direct=true
                    else 
                        if online 
                            .ui.green.large.label 
                                i.large.checkmark.icon
                                |online
                        else
                            .ui.disabled.large.label 
                                |offline
                        if current_status
                            .ui.small.header(title='status' )
                                i.grey.clock.icon
                                |!{current_status}
                    if is_dev
                        .ui.small.inline.header #{_id}
                            
                .twelve.wide.column.scrollin
                    .ui.stackable.grid
                        // .spacer
                        .sixteen.wide.column
                            +user_dashboard
                        .eight.wide.column
                            +user_credit
                        .eight.wide.column
                            +user_friends
                        .eight.wide.column
                            +user_received
                        .eight.wide.column
                            +user_sent
                        .eight.wide.column
                            +user_genekeys
                        .eight.wide.column
                            +user_info
                        .eight.wide.column
                            +user_events
                        .eight.wide.column
                            +user_badges
                        .eight.wide.column
                            +user_tribes
                               
           
template(name='user_received')  
    .ui.inline.header 
        i.chevron.down.icon
        |points received
    .ui.basic.label #{total_credit_amount}p total received
    // |received
    .ui.basic.label(title='received count') #{credit_count} total gifts 
    .ui.basic.label(title='rank') ##{global_credit_count_rank} count rank
        
    i.tags.icon(title='credit tags')
    each credit_tags
        .ui.basic.circular.label #{title}
            small #{count}
        
    .ui.stackable.cards.scrolling
        each user_received_docs
            a.ui.card(href="/m/debit/#{_id}")
                .content
                    .header
                        strong #{amount}pt 
                        // |from 
                        if author.profile_image_id
                            img.ui.avatar.image(src="{{c.url author.profile_image_id height=200 width=200 gravity='face' crop='fill'}}")
                        |#{_author.shortname}
                    small #{when}
                    div
                    |#{description}
                    div
                    each tags
                        .ui.basic.label #{this}

template(name='user_received_small')
    .ui.inline.header 
        i.minus.icon
        |#{total_credit_amount}p
        |received
        .ui.basic.label #{credit_count} credits
            | ##{global_credit_count_rank}
    div
    .ui.link.list.scrolling
        each user_credits
            .item
                if author.profile_image_id
                    img.ui.avatar.image(src="{{c.url author.profile_image_id height=200 width=200 gravity='face' crop='fill'}}")
                .content
                    .header
                        strong #{amount}pt 
                        |from 
                        a(href="/user/#{author.username}")
                            |#{author.username}
                    .description
                        a(href="/debit/#{_id}")
                            |#{when}
                .content
                    .description
                        |#{description}
                        each tags
                            .ui.basic.label #{this}
                if is_admin 
                    +remove_button
                .spacer
                            
                            
                            
template(name='user_sent')  
    .ui.inline.header 
        i.send.icon
        |sent
    .ui.basic.label #{total_debit_amount}p total sent
    .ui.basic.label(title='debit count') #{debit_count} gifts sent
    .ui.basic.label(title='rank') ##{global_debit_count_rank} gift sent rank
        
    i.tags.icon(title='credit tags')
    each debit_tags
        .ui.basic.circular.label #{title}
            small #{count}
        
    .ui.stackable.cards.scrolling
        each sent_items
            .ui.card
                .content
                    .header
                        strong #{amount}pt
                        | to 
                        if recipient.profile_image_id
                            img.ui.avatar.image(src="{{c.url recipient.profile_image_id height=200 width=200 gravity='face' crop='fill'}}")
                        |#{recipient.shortname}
                    small #{when}
                    div
                    |#{description}
                    div
                    each tags
                        .ui.mini.basic.label #{this}
                            
                            
                            
                            
template(name='user_about')
    .ui.header 
        i.info.icon
        |user info
    with current_user
        // a.ui.compact.button(href="{{c.url genekeys_profile }}" target="_window")
        //     +i name='dna-helix' cl='ui mini image'
            
        //     |view gene keys profile
        .ui.four.column.stackable.grid
            .column
                .ui.small.header What do you hope to receive?
                .smallscroll
                    |#{profile_hope_receive}
            .column
                .ui.small.header What excites you about being apart of this community?
                .smallscroll
                    |#{profile_excites_blurb}
                .spacer
            .column
                .ui.small.header What do you want this community to know about you?
                .smallscroll
                    |#{profile_community_blurb}
            .column
                .ui.small.header What would you like to contribute (think: superpowers, talents, gifts, resources)?
                .smallscroll
                    |#{profile_contribute_blurb}
        if tags 
            i.large.tags.icon
            each tags
                .ui.basic.large.label
                    |#{this}
                // +user_info_tag
        div
        // .ui.header 
        //     i.line.chart.icon
        //     |levels
        // each levels
        //     .ui.basic.label #{this}
        div
        .ui.header 
            |city:
            |#{city}               
        div
        .ui.header 
            |state:
            |#{state}               
        div
        if is_admin
            .ui.header 
                i.shield.icon
                |roles
            each roles
                .ui.label #{this}
            

template(name='user_info_tag')
    .ui.basic.tertiary.button 
        if term 
            if term.image 
                img.ui.tiny.image(src=term.image)
        |#{this}
                            
            
            
            
            
template(name='user_genekeys')
    .ui.header 
        +icolor name='dna-helix'
        |user genekeys
    with current_user
        if genekeys_link
            a.ui.basic.button(href=genekeys_link target="_window")
                |view gene keys link
        .ui.stackable.three.column.grid
            .column
                +image_view key='gene1' label='gene keys 1' icon='dna' direct=true
            .column
                +image_view key='gene2' label='gene keys 2' icon='dna' direct=true
            .column
                +image_view key='gene3' label='gene keys 3' icon='dna' direct=true
        |!{genekeys_report}

// template(name='user_info_tag')
//     .ui.basic.tertiary.button 
//         if term 
//             if term.image 
//                 img.ui.tiny.image(src=term.image)
//         |#{this}
            


              
template(name='user_friends')
    .ui.card
        .content
            .ui.header 
                i.large.handshake.icon
                // +i name='friends'
                |friends
            // .ui.input
            //     i.plus.icon
            //     input.search_friend(type='text' placeholder='add by username...')
            +multi_user_edit key='friend_ids' label='friends' direct=true
            each friend_search_results
                .ui.header #{username}
            each user_friends
                .item #{username}

template(name='user_subscriptions')              
    .ui.card
        .content
            // a.header(href="/user/#{username}/subscriptions")
            .ui.header
                // +i name='clock' cl='ui avatar image'
                i.large.clock.icon
                |subscriptions
            each user_subs
                .ui.header #{when}
                    
                    
                    
                    
        
        
template(name='user_credit')
    .ui.stackable.one.column.padded.grid
        if is_current_user
            .column
                .ui.inline.header
                    // i.money.icon
                    +i name='money'
                    |{{current_user.points}}
                    |points
                .ui.big.compact.button.send_points
                    +i name='donate'
                    |send points
                a.ui.big.button(href="/transfers")
                    +i name='exchange'
                    // i.exchange.icon
                    |transfers
                // .ui.inline.header 
                //     // i.shield.icon
                //     +i name='shield'
                //     |admin
                .ui.big.icon.button.add_credit(title='add credit')
                    |+1
                // // +number_edit key='credit' label='edit credit' min='0' step='1' max='1000' direct=true
                // .ui.big.icon.button.remove_credit(title='remove credit')
                //     |-1
                +topup_button amount=10
                +topup_button amount=20
                +topup_button amount=100
                // |includes 2% credit card processing fee
                // .ui.action.input
                //     input.deposit_amount(type='number' min='1' placeholder='deposit')
                //     .ui.icon.button.add_credits   
                //         i.right.chevron.icon
                        
                .ui.large.bulleted.list.smallscroll
                    each topups
                        .item 
                            .content
                                .header 
                                    |$#{amount}
                                .description 
                                    |#{when} {{long_date _timestamp}}
                                    //- if is_dev
                                    +remove_button        
                                    
                                    
                                    
                                    
                                    
template(name='user_events')  
    .ui.header 
        +i name='calendar'
        |user events
    each user_events
        .ui.segment
            .ui.small.header #{date} #{start_time}
            div
            +user_list_toggle key='read_by_ids' label='mark read' icon='eye'
            if can_edit
                +remove_button
            //- div
            +author_info
            +creation_info
    .ui.segment
        .ui.header.pointer.toggle_maybe
            i.question.orange.icon
            |maybe
        if session_is 'view_maybe'
            each user_maybe_events
                .ui.segment
                    a.ui.inline.header(href="/event/#{_id}") #{title} 
                    .ui.small.inline.header #{date} #{start_time}
                    +author_info
                    +creation_info
    .ui.segment
        .ui.header.pointer
            i.checkmark.icon
            |went
        if session_is 'view_maybe'
            each user_maybe_events
                .ui.segment
                    a.ui.inline.header(href="/event/#{_id}") #{title} 
                    .ui.small.inline.header #{date} #{start_time}
                    +author_info
                    +creation_info
    .ui.segment
        .ui.header.pointer
            i.green.checkmark.icon
            |going
        if session_is 'view_maybe'
            each user_maybe_events
                .ui.segment
                    a.ui.inline.header(href="/event/#{_id}") #{title} 
                    .ui.small.inline.header #{date} #{start_time}
                    +author_info
                    +creation_info
    .ui.segment
        .ui.header.pointer
            i.chess.king.icon
            |hosted
        if session_is 'view_maybe'
            each user_maybe_events
                .ui.segment
                    a.ui.inline.header(href="/event/#{_id}") #{title} 
                    .ui.small.inline.header #{date} #{start_time}
                    +author_info
                    +creation_info
                    
                    
template(name='user_badges')
    .ui.center.aligned.header 
        +i name='prize'
        |user badges
    .ui.small.centered.five.stackable.cards
        each user_badges
            a.ui.card(href="/badge/#{_id}")
                +icolorlg name=icon cl='ui fluid image'
                .content
                    .ui.header #{location}: #{title}
                    
                    
template(name='user_dashboard')
    // +user_about
    // .ui.hidden.divider
    .ui.stackable.grid
        .row
            .sixteen.wide.column
                .ui.inline.header() #{points}pts
                .ui.big.basic.circular.label() {{to_percent one_ratio}}% one ratio
                .ui.large.basic.circular.label() #{flow_volume} volume
                //- .ui.compact.icon.button.refresh_user_stats(title='refresh stats')
                //-     i.refresh.icon
        .four.column.row
            .column
                // a.ui.inline.header(href="/user/#{username}/credits")
                .ui.inline.header
                    i.chevron.down.large.icon
                    |#{total_credit_amount}p
                    // |received
                    small(title='received count') (#{credit_count}x) 
                    small(title='rank') ##{global_credit_count_rank}
                i.tags.icon(title='credit tags')
                each credit_tags
                    .ui.small.basic.circular.label #{title}
                        // small #{count}
                .medscroll.ui.segments
                    each user_credits
                        +user_credit_segment
            .column
                // a.ui.inline.spaced.header(href="/user/#{username}/debits")
                .ui.inline.spaced.header
                    i.chevron.up.icon
                    |#{total_debit_amount}p
                    // |sent
                    small(title='debit count') (#{debit_count}x)
                    small(title='rank') ##{global_debit_count_rank}
                i.tags.icon(title='credit tags')
                each debit_tags
                    .ui.small.basic.circular.label #{title} 
                        // small #{count}
    
                div
                .medscroll.ui.segments
                    each user_debits
                        +user_debit_segment
            .column
                .ui.inline.spaced.header
                    i.concierge.bell.icon
                    |requests
                .ui.small.header (#{total_fulfilled_amount}p total fulfilled)
                .ui.small.header (#{fulfilled_count}p total fulfilled count)
                .medscroll
                    each user_requests
                        .ui.card
                            if image_id
                                img.ui.image(src="{{c.url image_id height=100 width=200}}" class=currentUser.invert_class)
                            .content.zoom.pointer
                                a.header(href="/request/#{_id}")
                                    |#{point_bounty}pts: #{title}
                                // |!{description}
                                |status: #{status}
                                if complete 
                                    |completed by #{completer.name}
            .column
                .ui.inline.spaced.header
                    i.calendar.icon
                    |events
                .medscroll
                    each user_event_tickets
                        .ui.card
                            if ticket_event.image_id
                                a(href="/event/#{event_id}")
                                    img.ui.fluid.zoom.image(src="{{c.url ticket_event.image_id height=200 width=200 crop='fit'}}" class=currentUser.invert_class)
                            .content.zoom.pointer
                                a.header(href="/event/#{event_id}")
                                    |#{ticket_event.title}
                                |#{fac.shortname}
                                |#{description}
                                |{{med_date date}}
                                |{{long_time time}}



template(name='user_credit_segment')
    .ui.segment.user_credit_segment.pointer.zoom
        .header
            strong #{amount}pt 
            // |from 
            if author.profile_image_id
                img.ui.avatar.image(src="{{c.url author.profile_image_id height=200 width=200 gravity='face' crop='fill'}}" class=currentUser.invert_class)
            |#{_author.shortname}
        small #{when}
        div
        |#{description}
        div
        each tags
            .ui.mini.basic.label #{this}


template(name='user_debit_segment')
    .ui.segment.user_debit_segment.pointer.zoom
        .header
            strong #{amount}pt
            | to 
            if recipient.profile_image_id
                img.ui.avatar.image(src="{{c.url recipient.profile_image_id height=200 width=200 gravity='face' crop='fill'}}" class=currentUser.invert_class)
            |#{recipient.shortname}
        small #{when}
        div
        |#{description}
        div
        each tags
            .ui.mini.basic.label #{this}
            
            
            
template(name='user_requests')  
    .ui.center.aligned.header 
        i.concierge.bell.icon
        |#{current_user.name} requests
    .scrolling
        each requests
            .ui.segment
                a.ui.header(href="/m/request/#{_id}") #{bounty}pts: #{title}
                | !{description}
                div
                if is_dev
                    +remove_button
                    +print_this
                +creation_info
                
                
template(name='user_tribes')
    .ui.inline.header
        +icolor name='campfire'
        |user tribes
    if is_current_user
        a.ui.circular.basic.icon.button(href="/user/#{current_user.username}/edit/tribes")
            i.pencil.icon
    .ui.header leader of
    each user_leader_tribes
        .ui.segment
            a.ui.header(href="/m/tribe/#{_id}") #{title}
            if is_current_user
                +enter_tribe
    .ui.header member of
    each user_member_tribes
        .ui.segment
            a.ui.header(href="/m/tribe/#{_id}") #{title}
            if is_current_user
                +enter_tribe
            
            
            
template(name='enter_tribe')
    .ui.button.enter
        |enter tribe
        
        
        
template(name='user_messages')
    .ui.center.aligned.header 
        i.blue.chat.icon
        |user messages
    .ui.stackable.two.column.grid
        .column
            if currentUser
                .ui.fluid.icon.big.input
                    i.rss.link.submit_public_message.icon
                    input.new_public_message(type='text' placeholder='new public message...')
            .ui.small.basic.segments
                each user_public_messages
                    .ui.segment.raw
                        .ui.small.inline.header #{body}
                        // div
                        +user_list_toggle key='read_by_ids' label='mark read' icon='eye'
                        if can_edit
                            +remove_icon
                        //- div
                        if is_admin
                            +boolean_edit key='is_private' label='private' direct=true
                        +author_info
                        +creation_info
                        +voting_small
        .column
            if currentUser
                .ui.fluid.icon.big.input
                    i.lock.link.submit_private_message.icon
                    input.new_private_message(type='text' placeholder='new private message...')
            .ui.small.basic.segments
                each user_private_messages
                    .ui.segment.raw
                        .ui.small.inline.header #{body}
                        if is_admin
                            +boolean_edit key='is_private' label='private' direct=true
                        if can_edit
                            +remove_icon
                        //- div
                        +author_info
                        +creation_info
                        +voting_small